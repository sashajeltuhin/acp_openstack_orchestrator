#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
        server {
                listen       80;
                client_max_body_size 20M;
                client_body_buffer_size 128K;
                #charset koi8-r;

                access_log   /logs/default_site.access.log;
                error_log   /logs/default_site.error.log;

            location /api {
                        proxy_redirect off;
                        proxy_set_header   X-Real-IP            $remote_addr;
                        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                        proxy_set_header   Host                   $http_host;
                        proxy_set_header   X-NginX-Proxy    true;
                        proxy_pass http://iaasapi:8024;
                        proxy_http_version 1.1;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection "upgrade";
                    }
            location /ci {
                          proxy_redirect off;
                          proxy_set_header   X-Real-IP            $remote_addr;
                          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                          proxy_set_header   Host                   $http_host;
                          proxy_set_header   X-NginX-Proxy    true;
                          proxy_pass http://iaasapi:8024;
                          proxy_http_version 1.1;
                          proxy_set_header Upgrade $http_upgrade;
                          proxy_set_header Connection "upgrade";
                      }
            location /socket.io {
                        proxy_pass http://iaasapi:8024;
                        proxy_http_version 1.1;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection "upgrade";
                    }
            location / {
                        root   /data/www/app;
                        index  index.html;
                        try_files $uri $uri/ /index.html;
                }
            }






     # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

# stay in the foreground so Docker has a process to track
daemon off;
